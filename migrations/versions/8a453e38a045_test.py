"""test

Revision ID: 8a453e38a045
Revises: 3d96de33ba13
Create Date: 2025-10-19 10:38:59.888939

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8a453e38a045'
down_revision: Union[str, None] = '3d96de33ba13'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shipment_event',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('zipcode', sa.Integer(), nullable=False),
    sa.Column('location', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM(name="shipmentstatus",create_type=False), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipment_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('seller', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('seller', sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('seller', sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('seller', sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True))
    op.alter_column('seller', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('shipment', sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True))
    op.add_column('shipment', sa.Column('seller_id', sa.Uuid(), nullable=False))
    op.add_column('shipment', sa.Column('delivery_partner_id', sa.Uuid(), nullable=False))
    op.alter_column('shipment', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.create_foreign_key(None, 'shipment', 'seller', ['seller_id'], ['id'])
    op.create_foreign_key(None, 'shipment', 'delivery_partner', ['delivery_partner_id'], ['id'])
    op.drop_column('shipment', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('shipment', sa.Column('status', postgresql.ENUM('placed', 'in_transit', 'out_for_delivery', 'delivered', name='shipmentstatus'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'shipment', type_='foreignkey')
    op.drop_constraint(None, 'shipment', type_='foreignkey')
    op.alter_column('shipment', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('shipment', 'delivery_partner_id')
    op.drop_column('shipment', 'seller_id')
    op.drop_column('shipment', 'created_at')
    op.alter_column('seller', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('seller', 'created_at')
    op.drop_column('seller', 'password_hash')
    op.drop_column('seller', 'email')
    op.drop_column('seller', 'name')
    op.drop_table('shipment_event')
    # ### end Alembic commands ###
